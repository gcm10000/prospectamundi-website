name: Deploy on Merge to Main

on:
  pull_request_target:
    types:
      - closed

jobs:
  if_merged:
    if: github.event.pull_request.merged == true && ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
      - name: Echo on merging to main
        if: ${{ github.ref == 'refs/heads/main' }}
        run: echo "I'm merging!"
      - run: |
          echo The PR was merged
      - uses: actions/checkout@v2
        # - uses: actions/setup-node@v2
      - name: Set up SSH key
        run: |
            echo "Starting SSH key setup..."
      
            echo "Step 1: Creating the ~/.ssh directory."
            mkdir -p ~/.ssh
            if [ $? -ne 0 ]; then
              echo "Error creating the ~/.ssh directory."
              exit 1
            fi
            echo "Directory ~/.ssh created successfully."
      
            echo "Step 2: Writing SSH key to ~/.ssh/id_rsa."
            echo "$SSH_KEY" > ~/.ssh/id_rsa
            if [ $? -ne 0 ]; then
              echo "Error writing SSH key to ~/.ssh/id_rsa."
              exit 1
            fi
            echo "SSH key written to ~/.ssh/id_rsa."
      
            echo "Step 3: Setting permissions on ~/.ssh/id_rsa."
            chmod 600 ~/.ssh/id_rsa
            if [ $? -ne 0 ]; then
              echo "Error setting permissions on ~/.ssh/id_rsa."
              exit 1
            fi
            echo "Permissions set to 600 on ~/.ssh/id_rsa."
      
            echo "Step 4: Adding $SSH_HOST to known hosts."
            ssh-keyscan -t rsa $SSH_HOST >> ~/.ssh/known_hosts
            if [ $? -ne 0 ]; then
              echo "Error adding $SSH_HOST to known hosts."
              exit 1
            fi
            echo "$SSH_HOST added to known hosts."
      
            echo "SSH key setup completed successfully."
        env:
            SSH_HOST: ${{ secrets.SSH_HOST }}
            SSH_KEY: ${{ secrets.SSH_KEY }}

    
    
      - name: Build Docker image
        run: docker build -t prospectamundi_front_image -f ./Dockerfile .

      - name: Try to create a new folder
        run: ssh $SSH_USERNAME@$SSH_HOST "mkdir -p downloads"
        env:
            SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
            SSH_HOST: ${{ secrets.SSH_HOST }}

      - name: Try to remove an old compacted image
        run: ssh $SSH_USERNAME@$SSH_HOST "rm -f /home/ubuntu/apps/downloads/prospectamundi_front_image.tar"
        env:
          SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
      
      
      - name: Try to stop and remove old container
        run: |
            ssh $SSH_USERNAME@$SSH_HOST "sudo docker stop prospectamundi_front || true && sudo docker rm prospectamundi_front || true"
        env:
          SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
          SSH_HOST: ${{ secrets.SSH_HOST }}


      - name: Push Docker image to server
        run: |
            docker save -o prospectamundi_front_image.tar prospectamundi_front_image
            scp prospectamundi_front_image.tar $SSH_USERNAME@$SSH_HOST:/home/ubuntu/apps/downloads/prospectamundi_front_image.tar
            ssh $SSH_USERNAME@$SSH_HOST "sudo docker rmi prospectamundi_front_image || true"
            ssh $SSH_USERNAME@$SSH_HOST "sudo docker load -i /home/ubuntu/apps/downloads/prospectamundi_front_image.tar"
        env:
            SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
            SSH_HOST: ${{ secrets.SSH_HOST }}
            nome_da_imagem: prospectamundi/prospectamundi_front_image
            tag: latest
 

      - name: Deploy the image to container
        run: ssh $SSH_USERNAME@$SSH_HOST "sudo docker compose -f ./apps/docker-compose.yml up -d prospectamundi_front"
        env:
          SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
 
